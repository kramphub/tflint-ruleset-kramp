# Is triggered for a push to a branch other than main.
substitutions:
  # Keep the go version in sync with the version used by the tflint image (https://github.com/terraform-linters/tflint/blob/master/Dockerfile)
  # Especially the alpine version is important to create compatible binaries.
  _GO_VERSION: "1.22-alpine3.19"
  _TFLINT_VERSION: "0.51.1"
  _JQ_VERSION: "latest"
steps:
  - name: "golang:${_GO_VERSION}"
    id: "build-and-test"
    script: go mod tidy && go build && go test -v ./...
    env:
      - GOOS=linux
      - GOARCH=amd64
  - name: "ghcr.io/terraform-linters/tflint:v${_TFLINT_VERSION}"
    id: "run-tflint-for-verify-dir"
    dir: "manual_tests/verify"
    env:
      - TFLINT_LOG=debug
    script: |
      mkdir -p ~/.tflint.d/plugins/ && cp ../../tflint-ruleset-kramp ~/.tflint.d/plugins/ # Make the ruleset available
      tflint --enable-plugin=kramp --no-color --format=json | tee tflint_output.json
  - name: "ghcr.io/terraform-linters/tflint:v${_TFLINT_VERSION}"
    id: "run-tflint-for-verify_ignores-dir"
    dir: "manual_tests/verify_ignores"
    script: |
      mkdir -p ~/.tflint.d/plugins/ && cp ../../tflint-ruleset-kramp ~/.tflint.d/plugins/ # Make the ruleset available
      tflint --enable-plugin=kramp --no-color --format=json | tee tflint_output.json
  - name: "ghcr.io/jqlang/jq:${_JQ_VERSION}"
    id: "validate-output-for-verify-dir"
    dir: "manual_tests/verify"
    args: [".issues | length == 10", "--exit-status", "tflint_output.json"]
  - name: "ghcr.io/jqlang/jq:${_JQ_VERSION}"
    id: "validate-output-for-verify_ignores-dir"
    dir: "manual_tests/verify_ignores"
    args: [".issues | length == 0", "--exit-status", "tflint_output.json"]
